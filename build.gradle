buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.7'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE"
    }
}

plugins {
    id "jacoco"
    id "org.sonarqube" version "3.3"
}

apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'id.koneko096'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    swagger_annotations_version = "1.5.15"
    jackson_version = "2.8.9"
    spring_web_version = "4.3.9.RELEASE"
    jodatime_version = "2.9.9"
    grpc_version = "1.15.0"
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir "$System.env.GOPATH/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis"
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.17.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task execute(type:JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}

install {
    repositories.mavenInstaller {
        pom.artifactId = 'grpc-http'
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-test"

    compile "io.swagger:swagger-annotations:$swagger_annotations_version"
    compile "org.springframework:spring-web:$spring_web_version"

    compile "org.flywaydb:flyway-core:5.2.1"
    runtime "mysql:mysql-connector-java:8.0.15"

    compile "org.jadira.usertype:usertype.core:5.0.0.GA"

    compile "com.google.protobuf:protobuf-java:3.17.2"
    compile "com.googlecode.protobuf-java-format:protobuf-java-format:1.4"
    compile "io.github.lognet:grpc-spring-boot-starter:3.0.0"
    compile "io.grpc:grpc-netty:$grpc_version"

    compile "org.projectlombok:lombok:1.18.20"
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    compile "joda-time:joda-time:$jodatime_version"

    runtimeOnly "com.h2database:h2"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
}

sonarqube {
    properties {
        property "sonar.projectKey", "koneko096_spring-grpc-example"
        property "sonar.organization", "koneko096-github"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "src/main/protoGen,src/main/java/id/koneko096/grpc/invoker/**/*,src/main/java/id/koneko096/grpc/client/*,src/main/java/id/koneko096/grpc/config/*,src/main/java/id/koneko096/grpc/data/model/Citizen.java,src/main/java/id/koneko096/grpc/CompanyGrpcApplication.java"
    }
}
